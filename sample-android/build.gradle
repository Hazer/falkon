apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion androidConstants.compileSdk
    buildToolsVersion androidConstants.buildToolsVersion

    defaultConfig {
        applicationId "com.jayrave.falkon.sample_android"
        minSdkVersion androidConstants.minSdk
        targetSdkVersion androidConstants.targetSdk
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }
}

dependencies {

    String falkonVersion = '0.2-alpha'
    compile "com.jayrave.falkon:falkon-android:$falkonVersion"

    compile libraries.kotlinStdlib
    compile libraries.supportAppCompat

    // ----------------------------------------- Advanced ------------------------------------------

//    // If `falkon-android` is too heavy, since it is designed to be modular, you can pick
//    // and choose the modules you want.
//
//    // Engine implementation using the default SQLite in Android
//    compile "com.jayrave.falkon:falkon-engine:$falkonVersion"
//    compile "com.jayrave.falkon:falkon-engine-android-sqlite:$falkonVersion"
//
//    // Provides EnhancedTable interface & base implementations. By default, enhanced tables
//    // also have `DAO`s associated with them
//    compile "com.jayrave.falkon:falkon-mapper:$falkonVersion"
//    compile "com.jayrave.falkon:falkon-mapper-basic:$falkonVersion"
//    compile "com.jayrave.falkon:falkon-mapper-enhanced:$falkonVersion"
//
//    // Simple SQL builders
//    compile "com.jayrave.falkon:falkon-sql-builder:$falkonVersion"
//    compile "com.jayrave.falkon:falkon-sql-builder-simple:$falkonVersion"
//
//    // To get extension functionality on the DAO. This adds fancy functions to DAO, which
//    // would allow inserting, updated & deleting models without using builders. Also simple
//    // query methods like #findById & #findAll are provided too
//    compile "com.jayrave.falkon:falkon-dao:$falkonVersion"
//    compile "com.jayrave.falkon:falkon-dao-extn:$falkonVersion"

    // ----------------------------------------- Advanced ------------------------------------------
}